version: 1.0.{build}

services:
  - iis                 # start IIS

install:
    - "python --version"
    - cmd: cd iis
    - ps: .\getModSecurityPkgs.ps1 https://modsecurity.blob.core.windows.net/windows-artifacts


before_build:
    - ps: |
        Write-Host "Alon - before restart"
        try { $Res = (Invoke-WebRequest http://localhost/).statuscode } catch { $Res = $_.Exception.Response.StatusCode.Value}; $Res
        #restart iis
        & {iisreset}; Start-Service W3SVC
        Write-Host "Alon - after restart"
        try { $Res = (Invoke-WebRequest http://localhost/).statuscode } catch { $Res = $_.Exception.Response.StatusCode.Value}; $Res
        # copy the required pkgs from the ModSecurity blob and install them (c++ & ModSecurity)
        Invoke-WebRequest -Uri https://modsecurity.blob.core.windows.net/windows-artifacts/vcredist_x64.exe -OutFile vcredist_x64.exe
        Invoke-WebRequest -Uri https://modsecurity.blob.core.windows.net/windows-artifacts/ModSecurityIIS_2.9.1-RC1-64b.msi -OutFile ModSecurityIIS_2.9.1-RC1-64b.msi
        Start-Process vcredist_x64.exe -Wait -ArgumentList '/install /passive /norestart'
        Start-Process msiexec.exe -ArgumentList '/I ModSecurityIIS_2.9.1-RC1-64b.msi /passive'

build_script:
    - ps: |
        Write-Host "Alon - build_script"
        try { $Res = (Invoke-WebRequest http://localhost/).statuscode } catch { $Res = $_.Exception.Response.StatusCode.Value}; $Res
    - cmd: ./build_release_amd64.bat

after_build:
    - ps: |
        ls C:\projects\ModSecurity\iis\release\amd64\
        # configure globale ModSecurity
        C:\Windows\system32\inetsrv\appcmd.exe install module /name:"ModSecurity IIS" /image:"C:\projects\ModSecurity\iis\release\amd64\ModSecurityIIS.dll"
        # remove not wanted modules
        #C:\Windows\system32\inetsrv\appcmd.exe uninstall module /module.name:"ModSecurity IIS (32bits)"
        C:\Windows\system32\inetsrv\appcmd.exe uninstall module /module.name:"ModSecurity IIS (64bits)"
        #get the content of the config file
        #get-Content C:\Windows\System32\inetsrv\config\applicationHost.config
        # enable sites
        #C:\Windows\system32\inetsrv\appcmd.exe set config /section:"system.webServer/ModSecurity" /"enabled:true" /"configFile:C:\Program Files\ModSecurity IIS\modsecurity_iis.conf"

test_script:
    - ps: |
        echo "alon test - build"
        try { $Res = (Invoke-WebRequest http://localhost/).statuscode } catch { $Res = $_.Exception.Response.StatusCode.Value}; $Res
        echo "1st try start"
        try { $Res = (Invoke-WebRequest http://localhost/?test=test%FF1).statuscode } catch { $Res = $_.Exception.Response.StatusCode.Value}; $Res
        echo "2nd try start"
        #get the crs repo
        cd C:\
        $crs_path = "C:\projects\owasp-modsecurity-crs"
        git clone -q https://github.com/SpiderLabs/owasp-modsecurity-crs.git $crs_path
        #configure modsec to use crs 3 and set if for the python testing
        $dbg_file = "C:\projects\ModSecurity\modsec_debug.log"
        $modsec_conf = "C:\Program Files\ModSecurity IIS\modsecurity.conf"
        Add-Content $modsec_conf "SecDebugLog $dbg_file`r`nSecDebugLogLevel 3"
        $modsec_iis_conf = "C:\Program Files\ModSecurity IIS\modsecurity_iis.conf"
        Rename-Item -Path "$crs_path\crs-setup.conf.example" -NewName "crs-setup.conf"
        Clear-Content $modsec_iis_conf
        #configure modsecurity_iis.conf for crs 3 and for runnig the python tests
        Add-Content $modsec_iis_conf "Include $modsec_conf"
        Add-Content $modsec_iis_conf "SecAction ""id:900005,\`r`n  phase:1,\`r`n  nolog,\`r`n  pass,\`r`n  ctl:ruleEngine=DetectionOnly,\`r`n  ctl:ruleRemoveById=910000,\"
        Add-Content $modsec_iis_conf "  setvar:tx.paranoia_level=4,\`r`n  setvar:tx.crs_validate_utf8_encoding=1,\`r`n  setvar:tx.arg_name_length=100,\`r`n  setvar:tx.arg_length=400"""
        Add-Content $modsec_iis_conf "include $crs_path/crs-setup.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-901-INITIALIZATION.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-905-COMMON-EXCEPTIONS.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-910-IP-REPUTATION.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-911-METHOD-ENFORCEMENT.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-912-DOS-PROTECTION.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-913-SCANNER-DETECTION.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-921-PROTOCOL-ATTACK.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-931-APPLICATION-ATTACK-RFI.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-933-APPLICATION-ATTACK-PHP.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-944-APPLICATION-ATTACK-JAVA.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/REQUEST-949-BLOCKING-EVALUATION.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/RESPONSE-950-DATA-LEAKAGES.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/RESPONSE-951-DATA-LEAKAGES-SQL.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/RESPONSE-952-DATA-LEAKAGES-JAVA.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/RESPONSE-953-DATA-LEAKAGES-PHP.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/RESPONSE-954-DATA-LEAKAGES-IIS.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/RESPONSE-959-BLOCKING-EVALUATION.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/RESPONSE-980-CORRELATION.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf"
        #restart iis to pick all the changes
        & {iisreset}; Start-Service W3SVC
        $a = Get-EventLog -Newest 10 -LogName "Application" -EntryType Error; $a
        #$a | Format-List -Property *
        #$a
        #try { $Res = (Invoke-WebRequest http://localhost/).statuscode } catch { $Res = $_.Exception.Response.StatusCode.Value}; $Res
        #echo "1st try"
        try { $Res = (Invoke-WebRequest http://localhost/?test=test%FF1).statuscode } catch { $Res = $_.Exception.Response.StatusCode.Value}; $Res
        echo "2nd try"
        echo "get modsec conf"
        get-Content $modsec_conf
        echo "get modsec iis conf"
        get-Content $modsec_iis_conf
        echo "get crs-setup conf"
        get-Content $crs_path/crs-setup.conf
        ls $dbg_file
        #finished set the config for crs3
        echo "alon test - finished"
        
notifications:
- provider: GitHubPullRequest
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true