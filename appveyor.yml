version: 1.0.{build}

services:
  - iis                 # start IIS

install:
    - "python --version"
    - ps: cd iis; .\getModSecurityPkgs.ps1 https://modsecurity.blob.core.windows.net/windows-artifacts


before_build:
    - ps: |
        # copy the required pkgs from the ModSecurity blob and install them (c++ & ModSecurity)
        Invoke-WebRequest -Uri https://modsecurity.blob.core.windows.net/windows-artifacts/vcredist_x64.exe -OutFile vcredist_x64.exe
        #Invoke-WebRequest -Uri https://modsecurity.blob.core.windows.net/windows-artifacts/ModSecurityIIS_2.9.1-RC1-64b.msi -OutFile ModSecurityIIS_2.9.1-RC1-64b.msi
        Start-Process vcredist_x64.exe -Wait -ArgumentList '/install /passive /norestart'
        #Start-Process msiexec.exe -ArgumentList '/I ModSecurityIIS_2.9.1-RC1-64b.msi /passive'
        #setup the python virtual env - not a must but still
        pip install virtualenv
        virtualenv --version
        $python_proj_name = "test_crs3"
        virtualenv $python_proj_name
        & ".\$python_proj_name\Scripts\activate.ps1"
        

build_script:
    - cmd: ./build_release_amd64.bat

before_test:
    - ps: |
        $modsec_repo = "C:\projects\ModSecurity"
        & {iisreset /stop}  #need to stop iis before copy of files that are used by it
        #copy the xml file to the schema
        Copy-Item "$modsec_repo\iis\ModSecurity.xml" -Destination "C:\Windows\System32\inetsrv\config\schema" -Force
        #set modsecurity in applicationhost.cofig 
        C:\Windows\System32\inetsrv\appcmd.exe install module /name:"ModSecurity" /image:"$modsec_repo\iis\release\amd64\ModSecurityIIS.dll"
        $pspath = 'MACHINE/WEBROOT/APPHOST'
        $filter = "/system.webServer"
        $propertyName = "sections"
        $propertyValue =  "ModSecurity"
        Add-WebConfigurationProperty -pspath $pspath -filter $filter -name $propertyName -value $propertyValue
        $file = 'C:\Windows\System32\inetsrv\config\applicationHost.config'
        $find = '            <section name="ModSecurity" />'
        $replace = '            <section name="ModSecurity" overrideModeDefault="Deny" allowDefinition="Everywhere" />'
        (Get-Content $file).replace($find, $replace) | Set-Content $file
        C:\Windows\System32\inetsrv\appcmd.exe set config /section:"system.webServer/ModSecurity" /"enabled:true" /"configFile:C:\Program Files (x86)\ModSecurity IIS\modsecurity_iis.conf"
        #setup the crs repo and the modsec config
        #Copy-Item "$modsec_repo\iis\release\amd64\*" -Destination "C:\Windows\System32\inetsrv" -Force
        #get the crs repo
        $crs_path = "C:\projects\owasp-modsecurity-crs"
        git clone -q https://github.com/SpiderLabs/owasp-modsecurity-crs.git $crs_path
        cd "$modsec_repo\tests"
        Rename-Item -Path "$crs_path\crs-setup.conf.example" -NewName "crs-setup.conf"
        Copy-Item "$crs_path\util\regression-tests\requirements.txt" -Destination "$modsec_repo\tests" -Force
        #setup the test env with depending python pkgs
        pip install -r requirements.txt
        #configure modsec to use crs 3 and set if for the python testing
        $dbg_file = "$modsec_repo\modsec_debug.log"
        $modsec_conf = "$modsec_repo\iis\wix\modsecurity.conf"
        Add-Content $modsec_conf "SecDebugLog $dbg_file`r`nSecDebugLogLevel 3"
        $modsec_iis_conf = "$modsec_repo\iis\wix\modsecurity_iis.conf"
        Clear-Content $modsec_iis_conf
        #configure modsecurity_iis.conf for crs 3 and for runnig the python tests
        Add-Content $modsec_iis_conf "Include modsecurity.conf"
        Add-Content $modsec_iis_conf "SecAction ""id:900005,\`r`n  phase:1,\`r`n  nolog,\`r`n  pass,\`r`n  ctl:ruleEngine=DetectionOnly,\`r`n  ctl:ruleRemoveById=910000,\"
        Add-Content $modsec_iis_conf "  setvar:tx.paranoia_level=4,\`r`n  setvar:tx.crs_validate_utf8_encoding=1,\`r`n  setvar:tx.arg_name_length=100,\`r`n  setvar:tx.arg_length=400"""
        Add-Content $modsec_iis_conf "include $crs_path\crs-setup.conf"
        Add-Content $modsec_iis_conf "include $crs_path/rules/*.conf"
        & {iisreset /start}; Start-Service W3SVC

test_script:
    - ps: |
        py.test.exe -v CRS_Tests_modsec_dbg.py --rule="$crs_path\util\regression-tests\tests\test.yaml"
        #running all the tests
        py.test.exe -q CRS_Tests_modsec_dbg.py --ruledir_recurse="$crs_path\util\regression-tests\tests\" --result-log=res.txt --tb=no --junit-xml=res.xml
        python Parse_test_res.py res.txt

notifications:
    - provider: GitHubPullRequest
      on_build_success: true
      on_build_failure: true
      on_build_status_changed: true
      
    - provider: Email
      to:
        - alpelled@microsoft.com
        #subject: 'Build {{status}}'                  # optional
        #message: "{{message}}, {{commitId}}, ..."    # optional
